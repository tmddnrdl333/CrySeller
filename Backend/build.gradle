buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "3.0.3"
    id "io.spring.dependency-management" version "1.1.0"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = "numble.cryseller"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    compileOnly "org.projectlombok:lombok"
    runtimeOnly "com.mysql:mysql-connector-j"
    annotationProcessor "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2"

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

def querydslDir = "src/main/generated"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.named("test") {
    useJUnitPlatform()
}
